from aiogram.types import Message, FSInputFile
from core.utils.FSM import FSM
from aiogram import Router, F, Bot
from core.keyboards.keyboards import (
    main_menu_keyboard,
    types_keyboard,
    offers_keyboard,
    geo_keyboard,
    languages_keyboard,
    main_menu_keyboard_admin,
    reports_keyboard,
    statistics_keyboard,
    tb_keyboard,
)
from aiogram.fsm.context import FSMContext
from core.filters.filter_for_back import IsNoneFilter
from core.utils import admins
from core.data_base.queries_core import AsyncCore
from datetime import datetime, timedelta
import tempfile
import pandas as pd
import os


router = Router()


@router.message(F.from_user.id.in_({*admins}), F.text == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—åü§ñ")
async def test_or_buy(message: Message, state: FSMContext):
    await state.set_state(FSM.TB)
    await message.answer("–í—ã–±–µ—Ä–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏", reply_markup=tb_keyboard)


@router.message(F.from_user.id.in_({*admins}), F.text.in_(["Test", "Buy"]), FSM.TB)
async def just_forward(message: Message, state: FSMContext):
    await state.update_data(TB=message.text)
    await state.set_state(FSM.types)
    await message.answer(
        "–í—ã–±–µ—Ä–∏ –≤–∏–¥ –∫—Ä–µ–∞—Ç–∏–≤–∞üë®üèª‚Äçüíª",
        reply_markup=types_keyboard,
    )


@router.message(F.from_user.id.in_({*admins}), F.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞‚ú®", IsNoneFilter())
async def statistics(message: Message, state: FSMContext):
    """Function returns statistics about bot to admin"""
    await state.set_state(FSM.statistics)
    await message.answer("–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é", reply_markup=statistics_keyboard)


@router.message(F.text == "–§–∞–π–ª‚ú®", FSM.statistics)
async def get_file(message: Message, state: FSMContext):
    """Function returns file which contains all the recordings about purchases"""
    await state.clear()
    temp_file = tempfile.NamedTemporaryFile(suffix=".csv", delete=False)
    purchases = await AsyncCore.get_purchases()
    df = pd.DataFrame(purchases)[::-1]
    df.to_csv(temp_file.name)
    await message.bot.send_document(
        chat_id=message.chat.id,
        document=FSInputFile(path=temp_file.name, filename="purchases.csv"),
        caption="‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®–ü–æ–ª—É—á–∏ —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–∫—É–ø–∫–∞–º–∏‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®",
        reply_markup=main_menu_keyboard_admin,
    )
    temp_file.close()
    os.remove(temp_file.name)


@router.message(F.text == "–û—Ç—á—ë—Ç‚ú®", FSM.statistics)
async def report(message: Message, state: FSMContext):
    """Function returns something:)"""
    await state.set_state(FSM.report)
    await message.answer(
        "‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®–í—ã–±–µ—Ä–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ—Ç—á—ë—Ç‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®",
        reply_markup=reports_keyboard,
    )


@router.message(F.text.in_(["–°–µ–≥–æ–¥–Ω—è", "–í—á–µ—Ä–∞", "–ù–µ–¥–µ–ª—è", "–ú–µ—Å—è—Ü"]), FSM.report)
async def users_options(message: Message, state: FSMContext):
    """Function which returns results of different sql-queries depending on the option"""
    date1, date2 = None, None
    match message.text:
        case "–°–µ–≥–æ–¥–Ω—è":
            date1, date2 = (
                datetime.utcnow().replace(hour=0, minute=0, second=0, microsecond=0),
                datetime.utcnow(),
            )
        case "–í—á–µ—Ä–∞":
            date1, date2 = datetime.utcnow().replace(
                hour=0, minute=0, second=0, microsecond=0
            ) - timedelta(days=1), datetime.utcnow().replace(
                hour=0, minute=0, second=0, microsecond=0
            )
        case "–ù–µ–¥–µ–ª—è":
            date1, date2 = datetime.utcnow() - timedelta(days=7), datetime.utcnow()
        case "–ú–µ—Å—è—Ü":
            date1, date2 = datetime.utcnow() - timedelta(days=30), datetime.utcnow()

    packs, kreo, money = await AsyncCore.get_report(date1=date1, date2=date2)
    await message.answer(
        f"‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®–ó–∞ –¥–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:\n–ü–∞–∫–æ–≤: {packs}\nKreo: {kreo or 0}\n–î–æ—Ö–æ–¥: {int(money or 0)}$‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®",
        reply_markup=main_menu_keyboard_admin,
    )
    await state.clear()
