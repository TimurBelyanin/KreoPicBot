from aiogram.types import Message
from core.utils.FSM import FSM
from aiogram import Router, F, Bot
from core.keyboards.keyboards import (
    main_menu_keyboard,
    types_keyboard,
    offers_keyboard,
    geo_keyboard,
    languages_keyboard,
    main_menu_keyboard_admin,
    statistics_keyboard,
)
from aiogram.fsm.context import FSMContext
from core.filters.filter_for_back import IsNoneFilter
from core.utils import admins


router = Router()


@router.message(F.text == "‚óÄÔ∏è–ù–∞–∑–∞–¥", IsNoneFilter())
async def back_handler_10(message: Message, state: FSMContext):
    """–í –¥–∞–Ω–Ω–æ–º —Ö–µ–Ω–¥–ª–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'"""
    # await bot.delete_message(
    #     chat_id=message.chat.id, message_id=message.reply_to_message.message_id
    # )
    await message.delete()
    context_data = await state.get_data()  # –°–ª–æ–≤–∞—Ä—å
    curent_state = await state.get_state()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞
    match curent_state:
        case FSM.types:
            await state.set_state(FSM.main_menu)
            keyboard = (
                main_menu_keyboard_admin
                if message.from_user.id in admins
                else main_menu_keyboard
            )
            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –Ω–∞ –ù—É—Ç—Ä—É - <b>KreoPic Bot ü§ñ</b>\n\n–Ø –±—É–¥—É —Ç–≤–æ–∏–º –≤–µ—Ä–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –∑–∞–ª–∏–≤–∞—Öüëæ",
                reply_markup=keyboard,
            )
        case FSM.offers:
            await state.set_data(
                {key: value for key, value in context_data.items() if key != "type"}
            )
            await state.set_state(FSM.types)
            await message.answer(
                "–í—ã–±–µ—Ä–∏ –≤–∏–¥ –∫—Ä–µ–∞—Ç–∏–≤–∞üë®üèª‚Äçüíª",
                reply_markup=types_keyboard,
            )
        case FSM.geo:
            await state.set_data(
                {key: value for key, value in context_data.items() if key != "offer"}
            )
            await state.set_state(FSM.offers)
            await message.answer(
                "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ—Ñ—Ñ–µ—Ä–∞ üôáüèª‚Äç‚ôÇÔ∏è",
                reply_markup=offers_keyboard,
            )
        case FSM.languages:
            await state.set_data(
                {key: value for key, value in context_data.items() if key != "geo"}
            )
            if context_data["type"] == "–¢–æ–≤–∞—Ä–Ω—ã–π":
                await state.set_state(FSM.offers)
                await message.answer(
                    "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ—Ñ—Ñ–µ—Ä–∞ üôáüèª‚Äç‚ôÇÔ∏è",
                    reply_markup=offers_keyboard,
                )
            else:
                await state.set_state(FSM.geo)
                await message.answer(
                    "–í—ã–±–µ—Ä–∏ –ì–ï–û üåé",
                    reply_markup=geo_keyboard,
                )
        case FSM.sizes:
            await state.set_data(
                {key: value for key, value in context_data.items() if key != "language"}
            )
            await state.set_state(FSM.languages)
            await message.answer(
                "–í—ã–±–µ—Ä–∏ —è–∑—ã–∫ üíÜüèª‚Äç‚ôÇÔ∏è",
                reply_markup=languages_keyboard,
            )
        case FSM.feedback:
            await state.set_state(FSM.main_menu)
            keyboard = (
                main_menu_keyboard_admin
                if message.from_user.id in admins
                else main_menu_keyboard
            )
            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –Ω–∞ –ù—É—Ç—Ä—É - <b>KreoPic Bot ü§ñ</b>\n\n–Ø –±—É–¥—É —Ç–≤–æ–∏–º –≤–µ—Ä–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –∑–∞–ª–∏–≤–∞—Öüëæ",
                reply_markup=keyboard,
            )
        case FSM.statistics:
            await state.set_state(FSM.main_menu)

            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –Ω–∞ –ù—É—Ç—Ä—É - <b>KreoPic Bot ü§ñ</b>\n\n–Ø –±—É–¥—É —Ç–≤–æ–∏–º –≤–µ—Ä–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –∑–∞–ª–∏–≤–∞—Öüëæ",
                reply_markup=main_menu_keyboard_admin,
            )
        case FSM.report:
            await state.set_state(FSM.statistics)
            await message.answer("–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é", reply_markup=statistics_keyboard)


@router.message(F.text == "–í –Ω–∞—á–∞–ª–æüè†", IsNoneFilter())
async def home_handler_10(message: Message, state: FSMContext):
    """–í –¥–∞–Ω–Ω–æ–º —Ö–µ–Ω–¥–ª–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É '–î–æ–º–æ–π'"""
    await state.clear()
    await state.set_state(FSM.main_menu)
    keyboard = (
        main_menu_keyboard_admin
        if message.from_user.id in admins
        else main_menu_keyboard
    )
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –Ω–∞ –ù—É—Ç—Ä—É - KreoPic Bot ü§ñ\n\n–Ø –±—É–¥—É —Ç–≤–æ–∏–º –≤–µ—Ä–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –∑–∞–ª–∏–≤–∞—Öüëæ",
        reply_markup=keyboard,
    )
